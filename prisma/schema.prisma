generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Products {
  productId    String    @id @default(cuid())
  productName  String
  productStock Int       @default(0)
  userId       String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  supplierName String
  supplierId   String
  supplier     Suppliers @relation(fields: [supplierId], references: [supplierId], onDelete: Cascade)
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([supplierId])
}

model Suppliers {
  supplierId      String     @id @default(cuid())
  supplierName    String
  supplierEmail   String
  supplierAddress String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime?  @updatedAt
  userId          String
  user            User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  products        Products[]

  @@index([userId])
}

// Necessary for Next auth
// model Account {
//   id                String  @id @default(cuid())
//   userId            String
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String? //@db.Text
//   access_token      String? //@db.Text
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String? //@db.Text
//   session_state     String?
//   user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
//   @@index([userId])
// }

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id         String       @id @default(cuid())
  name       String
  email      String       @unique
  password   String
  image      String       @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt
  createdBy  String?
  // accounts  Account[]
  sessions  Session[]
  products   Products[]
  suppliers  Suppliers[]

  @@unique([id])
}

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

